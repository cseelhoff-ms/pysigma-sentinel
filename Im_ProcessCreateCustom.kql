SecurityEvent 
// pre-filtering
| where (isnull(starttime) or TimeGenerated >= starttime)
    and (isnull(endtime) or TimeGenerated <= endtime)
    and (EventSourceName == "Microsoft-Windows-Sysmon" and EventID == 1)
    and (array_length(dvcipaddr_has_any_prefix) == 0)
    and (array_length(commandline_has_all) == 0 or EventData has_all (commandline_has_all)) 
    and (array_length(commandline_has_any) == 0 or EventData has_any (commandline_has_any)) 
    and (array_length(commandline_has_any_ip_prefix) == 0 or has_any_ipv4_prefix(EventData, commandline_has_any_ip_prefix)) 
    and (array_length(actingprocess_has_any) == 0 or EventData has_any (actingprocess_has_any)) 
    and (array_length(targetprocess_has_any) == 0 or EventData has_any (targetprocess_has_any)) 
    and (array_length(parentprocess_has_any) == 0)
    and (targetusername_has == '*' or EventData has targetusername_has)  
    and (array_length(dvchostname_has_any) == 0 or Computer has_any (dvchostname_has_any))  
| parse-kv EventData as (
    ProcessGuid: string, 
    ProcessId: string,
    Image: string,
    FileVersion: string,
    Description: string,
    Product: string,
    Company: string,
    OriginalFileName: string,
    CommandLine: string,
    CurrentDirectory: string,
    User: string,
    LogonGuid: string, 
    LogonId: string,
    IntegrityLevel: string,
    Hashes: string,
    ParentProcessGuid: string, 
    ParentProcessId: string,
    ParentImage: string,
    ParentCommandLine: string,
    ParentUser: string
    ) 
    with (regex=@'<Data Name="(\w+)">{?([^<]*?)}?</Data>')
// -- post-filtering
| where (array_length(commandline_has_any) == 0 or CommandLine has_any (commandline_has_any)) 
    and (array_length(commandline_has_all) == 0 or CommandLine has_all (commandline_has_all)) 
    and (array_length(commandline_has_any_ip_prefix) == 0 or has_any_ipv4_prefix(CommandLine, commandline_has_any_ip_prefix)) 
    and (array_length(actingprocess_has_any) == 0 or ParentImage has_any (actingprocess_has_any)) 
    and (targetusername_has == '*' or User has targetusername_has) 
    and (array_length(targetprocess_has_any) == 0 or Image has_any (targetprocess_has_any))
// --
| parse-kv Hashes as (MD5: string, SHA1: string, SHA256: string, IMPHASH: string) with (quote='"')
| extend
    Hash = coalesce (SHA256, SHA1, IMPHASH, MD5, "")
| extend
    HashType = tostring(dynamic(["SHA256", "SHA1", "IMPHASH", "MD5"])[array_index_of(pack_array(SHA256, SHA1, IMPHASH, MD5), Hash)])
| project-rename
    TargetProcessMD5 = MD5,
    TargetProcessSHA1 = SHA1,
    TargetProcessSHA256 = SHA256,
    TargetProcessIMPHASH = IMPHASH
| project-away Hashes
| extend         
    TargetUsername = User,
    TargetProcessCommandLine = CommandLine
| project-rename 
    DvcHostname = Computer,
    TargetUserSessionGuid = LogonGuid,
    TargetProcessId = ProcessId,
    TargetUserSessionId = LogonId,  
    TargetProcessGuid = ProcessGuid,
    TargetProcessName = Image,
    TargetProcessFilename = OriginalFileName,
    TargetProcessCurrentDirectory = CurrentDirectory,
    TargetProcessIntegrityLevel = IntegrityLevel,    
    TargetProcessFileCompany = Company,
    TargetProcessFileDescription = Description,
    TargetProcessFileVersion = FileVersion,
    TargetProcessFileProduct = Product,   
    ActingProcessId = ParentProcessId,
    ActingProcessGuid = ParentProcessGuid,                          
    ActingProcessCommandLine = ParentCommandLine,
    ActingProcessName = ParentImage,
    ActorUsername = ParentUser
| extend 
    TargetUsernameType = iff(isnotempty(TargetUsername), 'Windows', ''),
    ActorUsernameType = iff(isnotempty(ActorUsername), 'Windows', ''),
    EventProduct = "Sysmon",
    // aliases
    Process = TargetProcessName,
    Dvc = DvcHostname,
    EventType = "ProcessCreated",
    EventOriginalType = "1",
    EventStartTime = todatetime(TimeGenerated),
    EventEndTime = todatetime(TimeGenerated),
    EventCount = int(1),
    EventVendor = "Microsoft",
    EventSchemaVersion = "0.1.0",
    EventSchema = 'ProcessEvent',
    EventResult = 'Success',
    DvcOs = "Windows"
| project-away
    EventData,
    AzureDeploymentID,
    EventID,
    ManagementGroupName,
    SourceSystem,
    Channel,
    Task,
    Level,
    Activity,
    SourceComputerId,
    EventOriginId,
    TimeCollected

